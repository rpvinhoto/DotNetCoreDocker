// <auto-generated />
using System;
using Acai.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Acai.Infra.Migrations
{
    [DbContext(typeof(AcaiContext))]
    [Migration("20200328194653_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Acai.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime");

                    b.Property<int>("ProdutoId");

                    b.Property<double>("TempoPreparoTotal");

                    b.Property<decimal>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Acai.Domain.Entities.Personalizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("TempoPreparoAdicional");

                    b.Property<decimal>("ValorAdicional");

                    b.HasKey("Id");

                    b.ToTable("Personalizacao");
                });

            modelBuilder.Entity("Acai.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SaborId");

                    b.Property<int>("TamanhoId");

                    b.HasKey("Id");

                    b.HasIndex("SaborId");

                    b.HasIndex("TamanhoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Acai.Domain.Entities.ProdutoPersonalizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonalizacaoId");

                    b.Property<int>("ProdutoId");

                    b.HasKey("Id");

                    b.HasIndex("PersonalizacaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoPersonalizacao");
                });

            modelBuilder.Entity("Acai.Domain.Entities.Sabor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double?>("TempoPreparoAdicional");

                    b.HasKey("Id");

                    b.ToTable("Sabor");

                    b.HasData(
                        new { Id = 1, Descricao = "Morango" },
                        new { Id = 2, Descricao = "Banana" },
                        new { Id = 3, Descricao = "Kiwi", TempoPreparoAdicional = 5.0 }
                    );
                });

            modelBuilder.Entity("Acai.Domain.Entities.Tamanho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("TempoPreparo");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Tamanho");
                });

            modelBuilder.Entity("Acai.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("Acai.Domain.Entities.Produto", "Produto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Acai.Domain.Entities.Produto", b =>
                {
                    b.HasOne("Acai.Domain.Entities.Sabor", "Sabor")
                        .WithMany("Produtos")
                        .HasForeignKey("SaborId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Acai.Domain.Entities.Tamanho", "Tamanho")
                        .WithMany("Produtos")
                        .HasForeignKey("TamanhoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Acai.Domain.Entities.ProdutoPersonalizacao", b =>
                {
                    b.HasOne("Acai.Domain.Entities.Personalizacao", "Personalizacao")
                        .WithMany("ProdutoPersonalizacoes")
                        .HasForeignKey("PersonalizacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Acai.Domain.Entities.Produto", "Produto")
                        .WithMany("ProdutoPersonalizacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
